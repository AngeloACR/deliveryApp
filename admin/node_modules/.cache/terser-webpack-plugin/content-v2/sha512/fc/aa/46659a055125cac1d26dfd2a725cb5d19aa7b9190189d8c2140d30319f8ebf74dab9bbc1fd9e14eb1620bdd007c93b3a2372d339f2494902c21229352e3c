{"map":"{\"version\":3,\"sources\":[\"/home/angeloacr/Proyectos/Tuk/ionic-taxi-4/admin/node_modules/@ionic/core/dist/esm/ion-checkbox-md.entry.js.pre-build-optimizer.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"d\",\"Checkbox\",\"_core_c02a05e9_js__WEBPACK_IMPORTED_MODULE_0__\",\"_theme_353a032e_js__WEBPACK_IMPORTED_MODULE_2__\",\"_helpers_c90aaa66_js__WEBPACK_IMPORTED_MODULE_3__\",\"[object Object]\",\"hostRef\",\"Object\",\"this\",\"inputId\",\"checkboxIds\",\"name\",\"checked\",\"indeterminate\",\"disabled\",\"value\",\"onClick\",\"setFocus\",\"onFocus\",\"ionFocus\",\"emit\",\"onBlur\",\"ionBlur\",\"ionChange\",\"ionStyle\",\"emitStyle\",\"isChecked\",\"checkbox-checked\",\"interactive-disabled\",\"buttonEl\",\"focus\",\"color\",\"el\",\"labelId\",\"mode\",\"label\",\"id\",\"path\",\"role\",\"aria-disabled\",\"aria-checked\",\"aria-labelledby\",\"class\",\"assign\",\"in-item\",\"checkbox-disabled\",\"checkbox-indeterminate\",\"interactive\",\"viewBox\",\"type\",\"ref\",\"btnEl\",\"watchers\",\"style\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { r as registerInstance, c as createEvent, d as getIonMode, h, H as Host, e as getElement } from './core-c02a05e9.js';\\nimport './config-503c2549.js';\\nimport { c as createColorClasses, h as hostContext } from './theme-353a032e.js';\\nimport { f as findItemLabel, r as renderHiddenInput } from './helpers-c90aaa66.js';\\n\\nconst Checkbox = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n        this.inputId = `ion-cb-${checkboxIds++}`;\\n        /**\\n         * The name of the control, which is submitted with the form data.\\n         */\\n        this.name = this.inputId;\\n        /**\\n         * If `true`, the checkbox is selected.\\n         */\\n        this.checked = false;\\n        /**\\n         * If `true`, the checkbox will visually appear as indeterminate.\\n         */\\n        this.indeterminate = false;\\n        /**\\n         * If `true`, the user cannot interact with the checkbox.\\n         */\\n        this.disabled = false;\\n        /**\\n         * The value of the toggle does not mean if it's checked or not, use the `checked`\\n         * property for that.\\n         *\\n         * The value of a toggle is analogous to the value of a `<input type=\\\"checkbox\\\">`,\\n         * it's only used when the toggle participates in a native `<form>`.\\n         */\\n        this.value = 'on';\\n        this.onClick = () => {\\n            this.setFocus();\\n            this.checked = !this.checked;\\n            this.indeterminate = false;\\n        };\\n        this.onFocus = () => {\\n            this.ionFocus.emit();\\n        };\\n        this.onBlur = () => {\\n            this.ionBlur.emit();\\n        };\\n        this.ionChange = createEvent(this, \\\"ionChange\\\", 7);\\n        this.ionFocus = createEvent(this, \\\"ionFocus\\\", 7);\\n        this.ionBlur = createEvent(this, \\\"ionBlur\\\", 7);\\n        this.ionStyle = createEvent(this, \\\"ionStyle\\\", 7);\\n    }\\n    componentWillLoad() {\\n        this.emitStyle();\\n    }\\n    checkedChanged(isChecked) {\\n        this.ionChange.emit({\\n            checked: isChecked,\\n            value: this.value\\n        });\\n        this.emitStyle();\\n    }\\n    disabledChanged() {\\n        this.emitStyle();\\n    }\\n    emitStyle() {\\n        this.ionStyle.emit({\\n            'checkbox-checked': this.checked,\\n            'interactive-disabled': this.disabled,\\n        });\\n    }\\n    setFocus() {\\n        if (this.buttonEl) {\\n            this.buttonEl.focus();\\n        }\\n    }\\n    render() {\\n        const { inputId, indeterminate, disabled, checked, value, color, el } = this;\\n        const labelId = inputId + '-lbl';\\n        const mode = getIonMode(this);\\n        const label = findItemLabel(el);\\n        if (label) {\\n            label.id = labelId;\\n        }\\n        renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\\n        let path = indeterminate\\n            ? h(\\\"path\\\", { d: \\\"M6 12L18 12\\\" })\\n            : h(\\\"path\\\", { d: \\\"M5.9,12.5l3.8,3.8l8.8-8.8\\\" });\\n        if (mode === 'md') {\\n            path = indeterminate\\n                ? h(\\\"path\\\", { d: \\\"M2 12H22\\\" })\\n                : h(\\\"path\\\", { d: \\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" });\\n        }\\n        return (h(Host, { onClick: this.onClick, role: \\\"checkbox\\\", \\\"aria-disabled\\\": disabled ? 'true' : null, \\\"aria-checked\\\": `${checked}`, \\\"aria-labelledby\\\": labelId, class: Object.assign({}, createColorClasses(color), { [mode]: true, 'in-item': hostContext('ion-item', el), 'checkbox-checked': checked, 'checkbox-disabled': disabled, 'checkbox-indeterminate': indeterminate, 'interactive': true }) }, h(\\\"svg\\\", { class: \\\"checkbox-icon\\\", viewBox: \\\"0 0 24 24\\\" }, path), h(\\\"button\\\", { type: \\\"button\\\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\\n    }\\n    get el() { return getElement(this); }\\n    static get watchers() { return {\\n        \\\"checked\\\": [\\\"checkedChanged\\\"],\\n        \\\"disabled\\\": [\\\"disabledChanged\\\"]\\n    }; }\\n    static get style() { return \\\":host{--background-checked:var(--ion-color-primary,#3880ff);--border-color-checked:var(--ion-color-primary,#3880ff);--checkmark-color:var(--ion-color-primary-contrast,#fff);--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:1;opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.51);--background:var(--ion-item-background,var(--ion-background-color,#fff));--transition:background 180ms cubic-bezier(0.4,0,0.2,1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30;stroke-width:3}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}\\\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\\\"; }\\n};\\nlet checkboxIds = 0;\\n\\nexport { Checkbox as ion_checkbox };\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{eLfv:function(e,t,i){\"use strict\";i.r(t),i.d(t,\"ion_checkbox\",(function(){return c}));var o=i(\"MTfx\"),r=(i(\"pcH8\"),i(\"pyhm\")),n=i(\"9Xoc\");const c=class{constructor(e){Object(o.l)(this,e),this.inputId=`ion-cb-${s++}`,this.name=this.inputId,this.checked=!1,this.indeterminate=!1,this.disabled=!1,this.value=\"on\",this.onClick=()=>{this.setFocus(),this.checked=!this.checked,this.indeterminate=!1},this.onFocus=()=>{this.ionFocus.emit()},this.onBlur=()=>{this.ionBlur.emit()},this.ionChange=Object(o.d)(this,\"ionChange\",7),this.ionFocus=Object(o.d)(this,\"ionFocus\",7),this.ionBlur=Object(o.d)(this,\"ionBlur\",7),this.ionStyle=Object(o.d)(this,\"ionStyle\",7)}componentWillLoad(){this.emitStyle()}checkedChanged(e){this.ionChange.emit({checked:e,value:this.value}),this.emitStyle()}disabledChanged(){this.emitStyle()}emitStyle(){this.ionStyle.emit({\"checkbox-checked\":this.checked,\"interactive-disabled\":this.disabled})}setFocus(){this.buttonEl&&this.buttonEl.focus()}render(){const{inputId:e,indeterminate:t,disabled:i,checked:c,value:s,color:a,el:h}=this,d=e+\"-lbl\",b=Object(o.e)(this),l=Object(n.f)(h);l&&(l.id=d),Object(n.k)(!0,h,this.name,c?s:\"\",i);let k=t?Object(o.i)(\"path\",{d:\"M6 12L18 12\"}):Object(o.i)(\"path\",{d:\"M5.9,12.5l3.8,3.8l8.8-8.8\"});return\"md\"===b&&(k=t?Object(o.i)(\"path\",{d:\"M2 12H22\"}):Object(o.i)(\"path\",{d:\"M1.73,12.91 8.1,19.28 22.79,4.59\"})),Object(o.i)(o.a,{onClick:this.onClick,role:\"checkbox\",\"aria-disabled\":i?\"true\":null,\"aria-checked\":`${c}`,\"aria-labelledby\":d,class:Object.assign({},Object(r.a)(a),{[b]:!0,\"in-item\":Object(r.c)(\"ion-item\",h),\"checkbox-checked\":c,\"checkbox-disabled\":i,\"checkbox-indeterminate\":t,interactive:!0})},Object(o.i)(\"svg\",{class:\"checkbox-icon\",viewBox:\"0 0 24 24\"},k),Object(o.i)(\"button\",{type:\"button\",onFocus:this.onFocus,onBlur:this.onBlur,disabled:this.disabled,ref:e=>this.buttonEl=e}))}get el(){return Object(o.f)(this)}static get watchers(){return{checked:[\"checkedChanged\"],disabled:[\"disabledChanged\"]}}static get style(){return\":host{--background-checked:var(--ion-color-primary,#3880ff);--border-color-checked:var(--ion-color-primary,#3880ff);--checkmark-color:var(--ion-color-primary-contrast,#fff);--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}:host-context([dir=rtl]) button,[dir=rtl] button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:1;opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.51);--background:var(--ion-item-background,var(--ion-background-color,#fff));--transition:background 180ms cubic-bezier(0.4,0,0.2,1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30;stroke-width:3}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\"}};let s=0}}]);","extractedComments":[]}