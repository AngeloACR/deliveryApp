{"map":"{\"version\":3,\"sources\":[\"/home/angeloacr/Proyectos/Tuk/ionic-taxi-4/admin/node_modules/@ionic/core/dist/esm/ion-split-pane-md.entry.js.pre-build-optimizer.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"d\",\"SplitPane\",\"_core_c02a05e9_js__WEBPACK_IMPORTED_MODULE_0__\",\"QUERY\",\"xs\",\"sm\",\"md\",\"lg\",\"xl\",\"never\",\"[object Object]\",\"hostRef\",\"Object\",\"this\",\"visible\",\"disabled\",\"when\",\"ionSplitPaneVisible\",\"detail\",\"isPane\",\"bind\",\"emit\",\"styleChildren\",\"updateState\",\"rmL\",\"undefined\",\"query\",\"mediaQuery\",\"length\",\"window\",\"matchMedia\",\"callback\",\"q\",\"matches\",\"mediaList\",\"addListener\",\"removeListener\",\"element\",\"parentElement\",\"el\",\"classList\",\"contains\",\"contentId\",\"children\",\"nu\",\"childElementCount\",\"foundMain\",\"i\",\"child\",\"isMain\",\"id\",\"hasAttribute\",\"console\",\"warn\",\"setPaneClass\",\"mode\",\"class\",\"split-pane-visible\",\"watchers\",\"style\",\"toAdd\",\"toRemove\",\"add\",\"remove\"],\"mappings\":\"4FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,kBAAA,WAAA,OAAAE,KAAA,IAAAC,EAAAL,EAAA,QAAAA,EAAA,QAGA,MAEMM,EAAQ,CACVC,GAAM,mBACNC,GAAM,qBACNC,GAAM,qBACNC,GAAM,qBACNC,GAAM,sBACNC,MAAS,IAEPR,EAAY,MACdS,YAAYC,GACRC,OAAAV,EAAA,EAAAU,CAAiBC,KAAMF,GACvBE,KAAKC,SAAU,EAIfD,KAAKE,UAAW,EAMhBF,KAAKG,KAAOb,EAAU,GACtBU,KAAKI,oBAAsBL,OAAAV,EAAA,EAAAU,CAAYC,KAAM,sBAAuB,GAExEH,eAAeI,GACX,MAAMI,EAAS,CAAEJ,QAAAA,EAASK,OAAQN,KAAKM,OAAOC,KAAKP,OACnDA,KAAKI,oBAAoBI,KAAKH,GAElCR,oBACIG,KAAKS,gBACLT,KAAKU,cAETb,uBACQG,KAAKW,MACLX,KAAKW,MACLX,KAAKW,SAAMC,GAGnBf,cAMI,GALIG,KAAKW,MACLX,KAAKW,MACLX,KAAKW,SAAMC,GAGXZ,KAAKE,SAEL,YADAF,KAAKC,SAAU,GAInB,MAAMY,EAAQb,KAAKG,KACnB,GAAqB,kBAAVU,EAEP,YADAb,KAAKC,QAAUY,GAInB,MAAMC,EAAaxB,EAAMuB,IAAUA,EAEnC,GAA0B,IAAtBC,EAAWC,QAIf,GAAIC,OAAOC,WAAY,CAEnB,MAAMC,EAAYC,IACdnB,KAAKC,QAAUkB,EAAEC,SAEfC,EAAYL,OAAOC,WAAWH,GACpCO,EAAUC,YAAYJ,GACtBlB,KAAKW,IAAM,IAAMU,EAAUE,eAAeL,GAC1ClB,KAAKC,QAAUoB,EAAUD,cAXzBpB,KAAKC,SAAU,EAcvBJ,OAAO2B,GACH,QAAKxB,KAAKC,SAGHuB,EAAQC,gBAAkBzB,KAAK0B,IAC/BF,EAAQG,UAAUC,SA9ET,mBAgFpB/B,gBACI,MAAMgC,EAAY7B,KAAK6B,UACjBC,EAAW9B,KAAK0B,GAAGI,SACnBC,EAAK/B,KAAK0B,GAAGM,kBACnB,IAAIC,GAAY,EAChB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAIG,IAAK,CACzB,MAAMC,EAAQL,EAASI,GACjBE,OAAuBxB,IAAdiB,EAA0BM,EAAME,KAAOR,EAAYM,EAAMG,aAAa,QACrF,GAAIF,EAAQ,CACR,GAAIH,EAEA,YADAM,QAAQC,KAAK,kDAGjBP,GAAY,EAEhBQ,EAAaN,EAAOC,GAEnBH,GACDM,QAAQC,KAAK,kDAGrB3C,SACI,MAAM6C,EAAO3C,OAAAV,EAAA,EAAAU,CAAWC,MACxB,OAAQD,OAAAV,EAAA,EAAD,CAAGA,EAAA,EAAM,CAAEsD,MAAO,CACjB9C,CAAC6C,IAAO,EAER7C,eAAe6C,MAAS,EACxBE,qBAAsB5C,KAAKC,WAGvCyB,SAAW,OAAO3B,OAAAV,EAAA,EAAAU,CAAWC,MAC7B6C,sBAAwB,MAAO,CAC3B5C,QAAW,CAAC,kBACZC,SAAY,CAAC,eACbC,KAAQ,CAAC,gBAEb2C,mBAAqB,MAAO,0nCAE1BL,EAAe,CAACf,EAAIU,KACtB,IAAIW,EACAC,EACAZ,GACAW,EA3HgB,kBA4HhBC,EA3HgB,oBA8HhBD,EA9HgB,kBA+HhBC,EAhIgB,mBAkIpB,MAAMrB,EAAYD,EAAGC,UACrBA,EAAUsB,IAAIF,GACdpB,EAAUuB,OAAOF\",\"sourcesContent\":[\"import { r as registerInstance, c as createEvent, d as getIonMode, h, e as getElement, H as Host } from './core-c02a05e9.js';\\nimport './config-503c2549.js';\\n\\nconst SPLIT_PANE_MAIN = 'split-pane-main';\\nconst SPLIT_PANE_SIDE = 'split-pane-side';\\nconst QUERY = {\\n    'xs': '(min-width: 0px)',\\n    'sm': '(min-width: 576px)',\\n    'md': '(min-width: 768px)',\\n    'lg': '(min-width: 992px)',\\n    'xl': '(min-width: 1200px)',\\n    'never': ''\\n};\\nconst SplitPane = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n        this.visible = false;\\n        /**\\n         * If `true`, the split pane will be hidden.\\n         */\\n        this.disabled = false;\\n        /**\\n         * When the split-pane should be shown.\\n         * Can be a CSS media query expression, or a shortcut expression.\\n         * Can also be a boolean expression.\\n         */\\n        this.when = QUERY['lg'];\\n        this.ionSplitPaneVisible = createEvent(this, \\\"ionSplitPaneVisible\\\", 7);\\n    }\\n    visibleChanged(visible) {\\n        const detail = { visible, isPane: this.isPane.bind(this) };\\n        this.ionSplitPaneVisible.emit(detail);\\n    }\\n    connectedCallback() {\\n        this.styleChildren();\\n        this.updateState();\\n    }\\n    disconnectedCallback() {\\n        if (this.rmL) {\\n            this.rmL();\\n            this.rmL = undefined;\\n        }\\n    }\\n    updateState() {\\n        if (this.rmL) {\\n            this.rmL();\\n            this.rmL = undefined;\\n        }\\n        // Check if the split-pane is disabled\\n        if (this.disabled) {\\n            this.visible = false;\\n            return;\\n        }\\n        // When query is a boolean\\n        const query = this.when;\\n        if (typeof query === 'boolean') {\\n            this.visible = query;\\n            return;\\n        }\\n        // When query is a string, let's find first if it is a shortcut\\n        const mediaQuery = QUERY[query] || query;\\n        // Media query is empty or null, we hide it\\n        if (mediaQuery.length === 0) {\\n            this.visible = false;\\n            return;\\n        }\\n        if (window.matchMedia) {\\n            // Listen on media query\\n            const callback = (q) => {\\n                this.visible = q.matches;\\n            };\\n            const mediaList = window.matchMedia(mediaQuery);\\n            mediaList.addListener(callback);\\n            this.rmL = () => mediaList.removeListener(callback);\\n            this.visible = mediaList.matches;\\n        }\\n    }\\n    isPane(element) {\\n        if (!this.visible) {\\n            return false;\\n        }\\n        return element.parentElement === this.el\\n            && element.classList.contains(SPLIT_PANE_SIDE);\\n    }\\n    styleChildren() {\\n        const contentId = this.contentId;\\n        const children = this.el.children;\\n        const nu = this.el.childElementCount;\\n        let foundMain = false;\\n        for (let i = 0; i < nu; i++) {\\n            const child = children[i];\\n            const isMain = contentId !== undefined ? child.id === contentId : child.hasAttribute('main');\\n            if (isMain) {\\n                if (foundMain) {\\n                    console.warn('split pane cannot have more than one main node');\\n                    return;\\n                }\\n                foundMain = true;\\n            }\\n            setPaneClass(child, isMain);\\n        }\\n        if (!foundMain) {\\n            console.warn('split pane does not have a specified main node');\\n        }\\n    }\\n    render() {\\n        const mode = getIonMode(this);\\n        return (h(Host, { class: {\\n                [mode]: true,\\n                // Used internally for styling\\n                [`split-pane-${mode}`]: true,\\n                'split-pane-visible': this.visible\\n            } }));\\n    }\\n    get el() { return getElement(this); }\\n    static get watchers() { return {\\n        \\\"visible\\\": [\\\"visibleChanged\\\"],\\n        \\\"disabled\\\": [\\\"updateState\\\"],\\n        \\\"when\\\": [\\\"updateState\\\"]\\n    }; }\\n    static get style() { return \\\"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-md{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))))}.split-pane-md.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-md.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\\\"; }\\n};\\nconst setPaneClass = (el, isMain) => {\\n    let toAdd;\\n    let toRemove;\\n    if (isMain) {\\n        toAdd = SPLIT_PANE_MAIN;\\n        toRemove = SPLIT_PANE_SIDE;\\n    }\\n    else {\\n        toAdd = SPLIT_PANE_SIDE;\\n        toRemove = SPLIT_PANE_MAIN;\\n    }\\n    const classList = el.classList;\\n    classList.add(toAdd);\\n    classList.remove(toRemove);\\n};\\n\\nexport { SplitPane as ion_split_pane };\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{RyPD:function(i,e,t){\"use strict\";t.r(e),t.d(e,\"ion_split_pane\",(function(){return l}));var s=t(\"MTfx\");t(\"pcH8\");const n={xs:\"(min-width: 0px)\",sm:\"(min-width: 576px)\",md:\"(min-width: 768px)\",lg:\"(min-width: 992px)\",xl:\"(min-width: 1200px)\",never:\"\"},l=class{constructor(i){Object(s.l)(this,i),this.visible=!1,this.disabled=!1,this.when=n.lg,this.ionSplitPaneVisible=Object(s.d)(this,\"ionSplitPaneVisible\",7)}visibleChanged(i){const e={visible:i,isPane:this.isPane.bind(this)};this.ionSplitPaneVisible.emit(e)}connectedCallback(){this.styleChildren(),this.updateState()}disconnectedCallback(){this.rmL&&(this.rmL(),this.rmL=void 0)}updateState(){if(this.rmL&&(this.rmL(),this.rmL=void 0),this.disabled)return void(this.visible=!1);const i=this.when;if(\"boolean\"==typeof i)return void(this.visible=i);const e=n[i]||i;if(0!==e.length){if(window.matchMedia){const i=i=>{this.visible=i.matches},t=window.matchMedia(e);t.addListener(i),this.rmL=()=>t.removeListener(i),this.visible=t.matches}}else this.visible=!1}isPane(i){return!!this.visible&&i.parentElement===this.el&&i.classList.contains(\"split-pane-side\")}styleChildren(){const i=this.contentId,e=this.el.children,t=this.el.childElementCount;let s=!1;for(let n=0;n<t;n++){const t=e[n],l=void 0!==i?t.id===i:t.hasAttribute(\"main\");if(l){if(s)return void console.warn(\"split pane cannot have more than one main node\");s=!0}a(t,l)}s||console.warn(\"split pane does not have a specified main node\")}render(){const i=Object(s.e)(this);return Object(s.i)(s.a,{class:{[i]:!0,[`split-pane-${i}`]:!0,\"split-pane-visible\":this.visible}})}get el(){return Object(s.f)(this)}static get watchers(){return{visible:[\"visibleChanged\"],disabled:[\"updateState\"],when:[\"updateState\"]}}static get style(){return\"ion-split-pane{left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}.split-pane-visible>.split-pane-main,.split-pane-visible>.split-pane-side{left:0;right:0;top:0;bottom:0;position:relative;-ms-flex:1;flex:1;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}.split-pane-visible>.split-pane-side:not(ion-menu),.split-pane-visible>ion-menu.split-pane-side.menu-enabled{display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}.split-pane-side:not(ion-menu){display:none}.split-pane-visible>.split-pane-side{-ms-flex-order:-1;order:-1}.split-pane-visible>.split-pane-side[side=end]{-ms-flex-order:1;order:1}.split-pane-md{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))))}.split-pane-md.split-pane-visible>.split-pane-side{min-width:270px;max-width:28%;border-right:var(--border);border-left:0}.split-pane-md.split-pane-visible>.split-pane-side[side=end]{min-width:270px;max-width:28%;border-right:0;border-left:var(--border)}\"}},a=(i,e)=>{let t,s;e?(t=\"split-pane-main\",s=\"split-pane-side\"):(t=\"split-pane-side\",s=\"split-pane-main\");const n=i.classList;n.add(t),n.remove(s)}}}]);","extractedComments":[]}