{"map":"{\"version\":3,\"sources\":[\"/home/angeloacr/Proyectos/Tuk/ionic-taxi-4/admin/node_modules/@ionic/core/dist/esm/ion-menu_4-ios.entry.js.pre-build-optimizer.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"d\",\"Menu\",\"MenuButton\",\"MenuController\",\"MenuToggle\",\"_core_c02a05e9_js__WEBPACK_IMPORTED_MODULE_0__\",\"_config_503c2549_js__WEBPACK_IMPORTED_MODULE_1__\",\"_index_2c4a5477_js__WEBPACK_IMPORTED_MODULE_3__\",\"_index_824b185a_js__WEBPACK_IMPORTED_MODULE_4__\",\"_theme_353a032e_js__WEBPACK_IMPORTED_MODULE_5__\",\"_helpers_c90aaa66_js__WEBPACK_IMPORTED_MODULE_6__\",\"_cubic_bezier_90d0df24_js__WEBPACK_IMPORTED_MODULE_7__\",\"[object Object]\",\"hostRef\",\"Object\",\"this\",\"lastOnEnd\",\"blocker\",\"createBlocker\",\"disableScroll\",\"mode\",\"isAnimating\",\"_isOpen\",\"isPaneVisible\",\"isEndSide\",\"disabled\",\"side\",\"swipeGesture\",\"maxEdgeStart\",\"ionWillOpen\",\"ionWillClose\",\"ionDidOpen\",\"ionDidClose\",\"ionMenuChange\",\"type\",\"oldType\",\"contentEl\",\"undefined\",\"classList\",\"remove\",\"add\",\"removeAttribute\",\"menuInnerEl\",\"animation\",\"updateState\",\"emit\",\"open\",\"get\",\"parent\",\"el\",\"parentNode\",\"content\",\"contentId\",\"document\",\"getElementById\",\"querySelector\",\"tagName\",\"typeChanged\",\"sideChanged\",\"_register\",\"gesture\",\"Promise\",\"resolve\",\"then\",\"bind\",\"createGesture\",\"gestureName\",\"gesturePriority\",\"threshold\",\"canStart\",\"ev\",\"onWillStart\",\"onStart\",\"onMove\",\"onEnd\",\"console\",\"error\",\"destroy\",\"_unregister\",\"backdropEl\",\"detail\",\"isPane\",\"timeStamp\",\"composedPath\",\"includes\",\"preventDefault\",\"stopPropagation\",\"close\",\"_isActive\",\"animated\",\"setOpen\",\"shouldOpen\",\"_setOpen\",\"beforeAnimation\",\"loadAnimation\",\"startAnimation\",\"afterAnimation\",\"width\",\"offsetWidth\",\"_createAnimation\",\"getBoolean\",\"duration\",\"fill\",\"isReversed\",\"ani\",\"direction\",\"easing\",\"playAsync\",\"playSync\",\"canSwipe\",\"_getOpenSync\",\"checkEdgeSide\",\"window\",\"currentX\",\"progressStart\",\"delta\",\"computeDelta\",\"deltaX\",\"progressStep\",\"isOpen\",\"stepValue\",\"velocity\",\"velocityX\",\"z\",\"shouldCompleteRight\",\"shouldCompleteLeft\",\"shouldComplete\",\"newStepValue\",\"adjustedStepValue\",\"onFinish\",\"oneTimeCallback\",\"progressEnd\",\"SHOW_MENU\",\"SHOW_BACKDROP\",\"block\",\"unblock\",\"MENU_CONTENT_OPEN\",\"stop\",\"isActive\",\"setDisabled\",\"forceClosing\",\"_setActiveMenu\",\"role\",\"class\",\"menu-enabled\",\"menu-side-end\",\"menu-side-start\",\"menu-pane-visible\",\"ref\",\"tappable\",\"watchers\",\"style\",\"Math\",\"max\",\"win\",\"posX\",\"innerWidth\",\"updateVisibility\",\"async\",\"menu\",\"menuEl\",\"visible\",\"autoHide\",\"onClick\",\"toggle\",\"visibilityChanged\",\"color\",\"menuIcon\",\"hidden\",\"attrs\",\"aria-disabled\",\"aria-hidden\",\"assign\",\"button\",\"menu-button-hidden\",\"menu-button-disabled\",\"ion-activatable\",\"ion-focusable\",\"icon\",\"lazy\",\"enable\",\"isEnabled\",\"getOpen\",\"getMenus\",\"name\",\"registerAnimation\",\"menu-toggle-hidden\"],\"mappings\":\"4FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,YAAA,WAAA,OAAAE,KAAAJ,EAAAG,EAAAD,EAAA,mBAAA,WAAA,OAAAG,KAAAL,EAAAG,EAAAD,EAAA,uBAAA,WAAA,OAAAI,KAAAN,EAAAG,EAAAD,EAAA,mBAAA,WAAA,OAAAK,KAAA,IAAAC,EAAAR,EAAA,QAAAS,EAAAT,EAAA,QAAAU,GAAAV,EAAA,QAAAA,EAAA,SAAAW,EAAAX,EAAA,QAAAY,EAAAZ,EAAA,QAAAa,EAAAb,EAAA,QAAAc,EAAAd,EAAA,QASA,MAAMI,EAAO,MACTW,YAAYC,GACRC,OAAAT,EAAA,EAAAS,CAAiBC,KAAMF,GACvBE,KAAKC,UAAY,EACjBD,KAAKE,QAAUV,EAAA,mBAAmBW,cAAc,CAAEC,eAAe,IACjEJ,KAAKK,KAAON,OAAAT,EAAA,EAAAS,CAAWC,MACvBA,KAAKM,aAAc,EACnBN,KAAKO,SAAU,EACfP,KAAKQ,eAAgB,EACrBR,KAAKS,WAAY,EAIjBT,KAAKU,UAAW,EAIhBV,KAAKW,KAAO,QAIZX,KAAKY,cAAe,EAKpBZ,KAAKa,aAAe,GACpBb,KAAKc,YAAcf,OAAAT,EAAA,EAAAS,CAAYC,KAAM,cAAe,GACpDA,KAAKe,aAAehB,OAAAT,EAAA,EAAAS,CAAYC,KAAM,eAAgB,GACtDA,KAAKgB,WAAajB,OAAAT,EAAA,EAAAS,CAAYC,KAAM,aAAc,GAClDA,KAAKiB,YAAclB,OAAAT,EAAA,EAAAS,CAAYC,KAAM,cAAe,GACpDA,KAAKkB,cAAgBnB,OAAAT,EAAA,EAAAS,CAAYC,KAAM,gBAAiB,GAE5DH,YAAYsB,EAAMC,GACd,MAAMC,EAAYrB,KAAKqB,UACnBA,SACgBC,IAAZF,GACAC,EAAUE,UAAUC,uBAAuBJ,KAE/CC,EAAUE,UAAUE,oBAAoBN,KACxCE,EAAUK,gBAAgB,UAE1B1B,KAAK2B,aAEL3B,KAAK2B,YAAYD,gBAAgB,SAErC1B,KAAK4B,eAAYN,EAErBzB,kBACIG,KAAK6B,cACL7B,KAAKkB,cAAcY,KAAK,CACpBpB,SAAUV,KAAKU,SACfqB,KAAM/B,KAAKO,UAGnBV,cACIG,KAAKS,UAAYV,OAAAJ,EAAA,EAAAI,CAAUC,KAAKW,MAEpCd,sBACIG,KAAK6B,cAEThC,+BACsByB,IAAdtB,KAAKmB,OACLnB,KAAKmB,KAAO5B,EAAA,EAAOyC,IAAI,WAA0B,QAAdhC,KAAKK,KAAiB,SAAW,YAExE,MACM4B,EADKjC,KAAKkC,GACEC,WACZC,OAA6Bd,IAAnBtB,KAAKqC,UACfC,SAASC,eAAevC,KAAKqC,WAC7BJ,GAAUA,EAAOO,eAAiBP,EAAOO,cAAc,UACxDJ,GAAYA,EAAQK,SAKzBzC,KAAKqB,UAAYe,EAEjBA,EAAQb,UAAUE,IAAI,gBACtBzB,KAAK0C,YAAY1C,KAAKmB,UAAMG,GAC5BtB,KAAK2C,cAELlD,EAAA,EAAemD,UAAU5C,MACzBA,KAAK6C,eAAiBC,QAAAC,UAAAC,KAAAlE,EAAAmE,KAAA,KAAA,UAA+BC,cAAc,CAC/DhB,GAAII,SACJa,YAAa,aACbC,gBAAiB,GACjBC,UAAW,GACXC,SAAUC,GAAMvD,KAAKsD,SAASC,GAC9BC,YAAa,IAAMxD,KAAKwD,cACxBC,QAAS,IAAMzD,KAAKyD,UACpBC,OAAQH,GAAMvD,KAAK0D,OAAOH,GAC1BI,MAAOJ,GAAMvD,KAAK2D,MAAMJ,KAE5BvD,KAAK6B,eArBD+B,QAAQC,MAAM,qEAuBtBhE,yBACIG,KAAKkB,cAAcY,KAAK,CAAEpB,SAAUV,KAAKU,SAAUqB,KAAM/B,KAAKO,UAC9DP,KAAK6B,cAEThC,uBACIG,KAAKE,QAAQ4D,UACbrE,EAAA,EAAesE,YAAY/D,MACvBA,KAAK4B,WACL5B,KAAK4B,UAAUkC,UAEf9D,KAAK6C,UACL7C,KAAK6C,QAAQiB,UACb9D,KAAK6C,aAAUvB,GAEnBtB,KAAK4B,eAAYN,EACjBtB,KAAKqB,UAAYrB,KAAKgE,WAAahE,KAAK2B,iBAAcL,EAE1DzB,mBAAmB0D,GACfvD,KAAKQ,cAAgB+C,EAAGU,OAAOC,OAAOlE,KAAKkC,IAC3ClC,KAAK6B,cAEThC,gBAAgB0D,GACRvD,KAAKO,SAAWP,KAAKC,UAAYsD,EAAGY,UAAY,KAC3BZ,EAAe,eAC7BA,EAAGa,eAAeC,SAASrE,KAAK2B,eAGnC4B,EAAGe,iBACHf,EAAGgB,kBACHvE,KAAKwE,SAOjB3E,SACI,OAAOiD,QAAQC,QAAQ/C,KAAKO,SAQhCV,WACI,OAAOiD,QAAQC,QAAQ/C,KAAKyE,aAMhC5E,KAAK6E,GAAW,GACZ,OAAO1E,KAAK2E,SAAQ,EAAMD,GAM9B7E,MAAM6E,GAAW,GACb,OAAO1E,KAAK2E,SAAQ,EAAOD,GAM/B7E,OAAO6E,GAAW,GACd,OAAO1E,KAAK2E,SAAS3E,KAAKO,QAASmE,GAMvC7E,QAAQ+E,EAAYF,GAAW,GAC3B,OAAOjF,EAAA,EAAeoF,SAAS7E,KAAM4E,EAAYF,GAErD7E,eAAe+E,EAAYF,GAAW,GAElC,SAAK1E,KAAKyE,aAAezE,KAAKM,aAAesE,IAAe5E,KAAKO,UAGjEP,KAAK8E,gBAAgBF,SACf5E,KAAK+E,sBACL/E,KAAKgF,eAAeJ,EAAYF,GACtC1E,KAAKiF,eAAeL,GACb,IAEX/E,sBAGI,MAAMqF,EAAQlF,KAAK2B,YAAYwD,YAC3BD,IAAUlF,KAAKkF,YAA4B5D,IAAnBtB,KAAK4B,YAGjC5B,KAAKkF,MAAQA,EAETlF,KAAK4B,YACL5B,KAAK4B,UAAUkC,UACf9D,KAAK4B,eAAYN,GAGrBtB,KAAK4B,gBAAkBnC,EAAA,EAAe2F,iBAAiBpF,KAAKmB,KAAMnB,MAC7DT,EAAA,EAAO8F,WAAW,YAAY,IAC/BrF,KAAK4B,UAAU0D,SAAS,GAE5BtF,KAAK4B,UAAU2D,KAAK,SAExB1F,qBAAqB+E,EAAYF,GAC7B,MAAMc,GAAcZ,EACda,EAAMzF,KAAK4B,UACZ8D,UAAU,EAAe,UAAY,UACrCC,OAAO,EAAe,iCAAmC,kCAC1DjB,QACMe,EAAIG,YAGVH,EAAII,WAGZhG,YACI,OAAQG,KAAKU,WAAaV,KAAKQ,cAEnCX,WACI,OAAOG,KAAKY,eAAiBZ,KAAKM,aAAeN,KAAKyE,YAE1D5E,SAASoE,GACL,QAAKjE,KAAK8F,eAGN9F,KAAKO,UAIAd,EAAA,EAAesG,gBAGjBC,EAAcC,OAAQhC,EAAOiC,SAAUlG,KAAKS,UAAWT,KAAKa,eAEvEhB,cAEI,OADAG,KAAK8E,iBAAiB9E,KAAKO,SACpBP,KAAK+E,gBAEhBlF,UACSG,KAAKM,aAAgBN,KAAK4B,UAK/B5B,KAAK4B,UACA8D,UAAW1F,KAAY,QAAI,UAAY,UACvCmG,eAAc,GANfpG,OAAAJ,EAAA,EAAAI,EAAO,EAAO,8BAQtBF,OAAOoE,GACH,IAAKjE,KAAKM,cAAgBN,KAAK4B,UAE3B,YADA7B,OAAAJ,EAAA,EAAAI,EAAO,EAAO,8BAGlB,MAAMqG,EAAQC,EAAapC,EAAOqC,OAAQtG,KAAKO,QAASP,KAAKS,WAE7DT,KAAK4B,UAAU2E,aADGH,EAAQpG,KAAKkF,OAGnCrF,MAAMoE,GACF,IAAKjE,KAAKM,cAAgBN,KAAK4B,UAE3B,YADA7B,OAAAJ,EAAA,EAAAI,EAAO,EAAO,8BAGlB,MAAMyG,EAASxG,KAAKO,QACdE,EAAYT,KAAKS,UACjB2F,EAAQC,EAAapC,EAAOqC,OAAQE,EAAQ/F,GAC5CyE,EAAQlF,KAAKkF,MACbuB,EAAYL,EAAQlB,EACpBwB,EAAWzC,EAAO0C,UAClBC,EAAI1B,EAAQ,EACZ2B,EAAsBH,GAAY,IAAMA,EAAW,IAAOzC,EAAOqC,OAASM,GAC1EE,EAAqBJ,GAAY,IAAMA,GAAY,IAAOzC,EAAOqC,QAAUM,GAC3EG,EAAiBP,EACjB/F,EAAYoG,EAAsBC,EAClCrG,EAAYqG,EAAqBD,EACvC,IAAIjC,GAAc4B,GAAUO,EACxBP,IAAWO,IACXnC,GAAa,GAEjB5E,KAAKC,UAAYgE,EAAOE,UAExB,IAAI6C,EAAe,EAAmB,MAAS,KAO/C,MAAMC,EAAqBR,GAAa,EAAK,IAAOA,EASpDO,GAAgBjH,OAAAH,EAAA,EAAAG,CAAwB,IAAIH,EAAA,EAAM,EAAG,GAAI,IAAIA,EAAA,EAAM,GAAK,GAAI,IAAIA,EAAA,EAAM,GAAK,GAAI,IAAIA,EAAA,EAAM,EAAG,GAAIqH,GAChHjH,KAAK4B,UACA+D,OAAO,kCACPuB,SAAS,IAAMlH,KAAKiF,eAAeL,GAAa,CACjDuC,iBAAiB,IAEhBC,YAAYL,EAAgBC,EAAc,KAEnDnH,gBAAgB+E,GACZ7E,OAAAJ,EAAA,EAAAI,EAAQC,KAAKM,YAAa,kDAG1BN,KAAKkC,GAAGX,UAAUE,IAAI4F,GAClBrH,KAAKgE,YACLhE,KAAKgE,WAAWzC,UAAUE,IAAI6F,GAElCtH,KAAKE,QAAQqH,QACbvH,KAAKM,aAAc,EACfsE,EACA5E,KAAKc,YAAYgB,OAGjB9B,KAAKe,aAAae,OAG1BjC,eAAe2G,GACXzG,OAAAJ,EAAA,EAAAI,CAAOC,KAAKM,YAAa,8CAKzBN,KAAKO,QAAUiG,EACfxG,KAAKM,aAAc,EACdN,KAAKO,SACNP,KAAKE,QAAQsH,UAEbhB,GAEIxG,KAAKqB,WACLrB,KAAKqB,UAAUE,UAAUE,IAAIgG,GAGjCzH,KAAKgB,WAAWc,SAIhB9B,KAAKkC,GAAGX,UAAUC,OAAO6F,GACrBrH,KAAKqB,WACLrB,KAAKqB,UAAUE,UAAUC,OAAOiG,GAEhCzH,KAAKgE,YACLhE,KAAKgE,WAAWzC,UAAUC,OAAO8F,GAEjCtH,KAAK4B,WACL5B,KAAK4B,UAAU8F,OAGnB1H,KAAKiB,YAAYa,QAGzBjC,cACI,MAAM8H,EAAW3H,KAAKyE,YAClBzE,KAAK6C,SACL7C,KAAK6C,QAAQ+E,aAAaD,IAAa3H,KAAKY,eAG3C+G,GAAY3H,KAAKO,SAElBP,KAAK6H,eAEJ7H,KAAKU,UACNjB,EAAA,EAAeqI,eAAe9H,MAElCD,OAAAJ,EAAA,EAAAI,EAAQC,KAAKM,YAAa,wBAE9BT,eACIE,OAAAJ,EAAA,EAAAI,CAAOC,KAAKO,QAAS,yBACrBP,KAAKM,aAAc,EACPN,KAAK4B,UAAU8D,UAAU,WACjCG,WACJ7F,KAAKiF,gBAAe,GAExBpF,SACI,MAAMY,UAAEA,EAASU,KAAEA,EAAIT,SAAEA,EAAQL,KAAEA,EAAIG,cAAEA,GAAkBR,KAC3D,OAAQD,OAAAT,EAAA,EAAD,CAAGA,EAAA,EAAM,CAAEyI,KAAM,aAAcC,MAAO,CACrCnI,CAACQ,IAAO,EACRR,cAAcsB,MAAS,EACvB8G,gBAAiBvH,EACjBwH,gBAAiBzH,EACjB0H,mBAAoB1H,EACpB2H,oBAAqB5H,IACpBT,OAAAT,EAAA,EAAAS,CAAE,MAAO,CAAEiI,MAAO,aAAcK,IAAKnG,GAAMlC,KAAK2B,YAAcO,GAAMnC,OAAAT,EAAA,EAAAS,CAAE,OAAQ,OAAQA,OAAAT,EAAA,EAAAS,CAAE,eAAgB,CAAEsI,IAAKnG,GAAMlC,KAAKgE,WAAa9B,EAAI8F,MAAO,gBAAiBM,UAAU,EAAO/D,iBAAiB,KAElNrC,SAAW,OAAOnC,OAAAT,EAAA,EAAAS,CAAWC,MAC7BuI,sBAAwB,MAAO,CAC3BpH,KAAQ,CAAC,eACTT,SAAY,CAAC,mBACbC,KAAQ,CAAC,eACTC,aAAgB,CAAC,wBAErB4H,mBAAqB,MAAO,4uDAE1BnC,EAAe,CAACC,EAAQE,EAAQ/F,IAC3BgI,KAAKC,IAAI,EAAGlC,IAAW/F,GAAa6F,EAASA,GAElDN,EAAgB,CAAC2C,EAAKC,EAAMnI,EAAWI,IACrCJ,EACOmI,GAAQD,EAAIE,WAAahI,EAGzB+H,GAAQ/H,EAGjBwG,EAAY,YACZC,EAAgB,gBAChBG,EAAoB,oBAGpBqB,EAAmBC,MAAOC,IAC5B,MAAMC,QAAexJ,EAAA,EAAeuC,IAAIgH,GACxC,SAAUC,WAAgBA,EAAOtB,cAG/BxI,EAAa,MACfU,YAAYC,GACRC,OAAAT,EAAA,EAAAS,CAAiBC,KAAMF,GACvBE,KAAKkJ,SAAU,EAIflJ,KAAKU,UAAW,EAIhBV,KAAKmJ,UAAW,EAIhBnJ,KAAKmB,KAAO,SACZnB,KAAKoJ,QAAUL,SACJtJ,EAAA,EAAe4J,OAAOrJ,KAAKgJ,MAG1CnJ,mBACIG,KAAKsJ,oBAETzJ,0BACIG,KAAKkJ,cAAgBJ,EAAiB9I,KAAKgJ,MAE/CnJ,SACI,MAAM0J,MAAEA,EAAK7I,SAAEA,GAAaV,KACtBK,EAAON,OAAAT,EAAA,EAAAS,CAAWC,MAClBwJ,EAAWjK,EAAA,EAAOyC,IAAI,WAAY,QAClCyH,EAASzJ,KAAKmJ,WAAanJ,KAAKkJ,QAChCQ,EAAQ,CACVvI,KAAMnB,KAAKmB,MAEf,OAAQpB,OAAAT,EAAA,EAAD,CAAGA,EAAA,EAAM,CAAE8J,QAASpJ,KAAKoJ,QAASO,gBAAiBjJ,EAAW,OAAS,KAAMkJ,cAAeH,EAAS,OAAS,KAAMzB,MAAOjI,OAAO8J,OAAO,CAAEhK,CAACQ,IAAO,GAAQN,OAAAL,EAAA,EAAAK,CAAmBwJ,GAAQ,CAAEO,QAAU,EAAMC,qBAAsBN,EAAQO,uBAAwBtJ,EAAUuJ,mBAAmB,EAAMC,iBAAiB,KAAWnK,OAAAT,EAAA,EAAAS,CAAE,SAAUA,OAAO8J,OAAO,GAAIH,EAAO,CAAEhJ,SAAUA,EAAUsH,MAAO,kBAAoBjI,OAAAT,EAAA,EAAAS,CAAE,OAAQ,KAAMA,OAAAT,EAAA,EAAAS,CAAE,WAAY,CAAEoK,KAAMX,EAAUnJ,KAAMA,EAAM+J,MAAM,KAAoB,OAAT/J,GAAiBN,OAAAT,EAAA,EAAAS,CAAE,oBAAqB,CAAEoB,KAAM,gBAE3hBqH,mBAAqB,MAAO,8iFAG1BpJ,EAAiB,MACnBS,YAAYC,GACRC,OAAAT,EAAA,EAAAS,CAAiBC,KAAMF,GAW3BD,KAAKmJ,GACD,OAAOvJ,EAAA,EAAesC,KAAKiH,GAS/BnJ,MAAMmJ,GACF,OAAOvJ,EAAA,EAAe+E,MAAMwE,GAShCnJ,OAAOmJ,GACH,OAAOvJ,EAAA,EAAe4J,OAAOL,GAYjCnJ,OAAOwK,EAAQrB,GACX,OAAOvJ,EAAA,EAAe4K,OAAOA,EAAQrB,GAQzCnJ,aAAawK,EAAQrB,GACjB,OAAOvJ,EAAA,EAAemB,aAAayJ,EAAQrB,GAS/CnJ,OAAOmJ,GACH,OAAOvJ,EAAA,EAAe+G,OAAOwC,GASjCnJ,UAAUmJ,GACN,OAAOvJ,EAAA,EAAe6K,UAAUtB,GAUpCnJ,IAAImJ,GACA,OAAOvJ,EAAA,EAAeuC,IAAIgH,GAK9BnJ,UACI,OAAOJ,EAAA,EAAe8K,UAK1B1K,WACI,OAAOJ,EAAA,EAAe+K,WAM1B3K,cACI,OAAOJ,EAAA,EAAea,cAS1BT,wBAAwB4K,EAAM7I,GAC1B,OAAOnC,EAAA,EAAeiL,kBAAkBD,EAAM7I,GAElD4G,mBAAqB,MAAO,kmBAG1BnJ,EAAa,MACfQ,YAAYC,GACRC,OAAAT,EAAA,EAAAS,CAAiBC,KAAMF,GACvBE,KAAKkJ,SAAU,EAOflJ,KAAKmJ,UAAW,EAChBnJ,KAAKoJ,QAAU,IACJ3J,EAAA,EAAe4J,OAAOrJ,KAAKgJ,MAG1CnJ,oBACIG,KAAKsJ,oBAETzJ,0BACIG,KAAKkJ,cAAgBJ,EAAiB9I,KAAKgJ,MAE/CnJ,SACI,MAAMQ,EAAON,OAAAT,EAAA,EAAAS,CAAWC,MAClByJ,EAASzJ,KAAKmJ,WAAanJ,KAAKkJ,QACtC,OAAQnJ,OAAAT,EAAA,EAAD,CAAGA,EAAA,EAAM,CAAE8J,QAASpJ,KAAKoJ,QAASQ,cAAeH,EAAS,OAAS,KAAMzB,MAAO,CAC/EnI,CAACQ,IAAO,EACRsK,qBAAsBlB,IACrB1J,OAAAT,EAAA,EAAAS,CAAE,OAAQ,OAEvByI,mBAAqB,MAAO\",\"sourcesContent\":[\"import { r as registerInstance, d as getIonMode, c as createEvent, h, H as Host, e as getElement } from './core-c02a05e9.js';\\nimport { b as config } from './config-503c2549.js';\\nimport './animation-d0becaea.js';\\nimport { GESTURE_CONTROLLER } from './index-2c4a5477.js';\\nimport { m as menuController } from './index-824b185a.js';\\nimport { c as createColorClasses } from './theme-353a032e.js';\\nimport { i as isEndSide, b as assert } from './helpers-c90aaa66.js';\\nimport { g as getTimeGivenProgression, P as Point } from './cubic-bezier-90d0df24.js';\\n\\nconst Menu = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n        this.lastOnEnd = 0;\\n        this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\\n        this.mode = getIonMode(this);\\n        this.isAnimating = false;\\n        this._isOpen = false;\\n        this.isPaneVisible = false;\\n        this.isEndSide = false;\\n        /**\\n         * If `true`, the menu is disabled.\\n         */\\n        this.disabled = false;\\n        /**\\n         * Which side of the view the menu should be placed.\\n         */\\n        this.side = 'start';\\n        /**\\n         * If `true`, swiping the menu is enabled.\\n         */\\n        this.swipeGesture = true;\\n        /**\\n         * The edge threshold for dragging the menu open.\\n         * If a drag/swipe happens over this value, the menu is not triggered.\\n         */\\n        this.maxEdgeStart = 50;\\n        this.ionWillOpen = createEvent(this, \\\"ionWillOpen\\\", 7);\\n        this.ionWillClose = createEvent(this, \\\"ionWillClose\\\", 7);\\n        this.ionDidOpen = createEvent(this, \\\"ionDidOpen\\\", 7);\\n        this.ionDidClose = createEvent(this, \\\"ionDidClose\\\", 7);\\n        this.ionMenuChange = createEvent(this, \\\"ionMenuChange\\\", 7);\\n    }\\n    typeChanged(type, oldType) {\\n        const contentEl = this.contentEl;\\n        if (contentEl) {\\n            if (oldType !== undefined) {\\n                contentEl.classList.remove(`menu-content-${oldType}`);\\n            }\\n            contentEl.classList.add(`menu-content-${type}`);\\n            contentEl.removeAttribute('style');\\n        }\\n        if (this.menuInnerEl) {\\n            // Remove effects of previous animations\\n            this.menuInnerEl.removeAttribute('style');\\n        }\\n        this.animation = undefined;\\n    }\\n    disabledChanged() {\\n        this.updateState();\\n        this.ionMenuChange.emit({\\n            disabled: this.disabled,\\n            open: this._isOpen\\n        });\\n    }\\n    sideChanged() {\\n        this.isEndSide = isEndSide(this.side);\\n    }\\n    swipeGestureChanged() {\\n        this.updateState();\\n    }\\n    async connectedCallback() {\\n        if (this.type === undefined) {\\n            this.type = config.get('menuType', this.mode === 'ios' ? 'reveal' : 'overlay');\\n        }\\n        const el = this.el;\\n        const parent = el.parentNode;\\n        const content = this.contentId !== undefined\\n            ? document.getElementById(this.contentId)\\n            : parent && parent.querySelector && parent.querySelector('[main]');\\n        if (!content || !content.tagName) {\\n            // requires content element\\n            console.error('Menu: must have a \\\"content\\\" element to listen for drag events on.');\\n            return;\\n        }\\n        this.contentEl = content;\\n        // add menu's content classes\\n        content.classList.add('menu-content');\\n        this.typeChanged(this.type, undefined);\\n        this.sideChanged();\\n        // register this menu with the app's menu controller\\n        menuController._register(this);\\n        this.gesture = (await import('./index-2c4a5477.js')).createGesture({\\n            el: document,\\n            gestureName: 'menu-swipe',\\n            gesturePriority: 30,\\n            threshold: 10,\\n            canStart: ev => this.canStart(ev),\\n            onWillStart: () => this.onWillStart(),\\n            onStart: () => this.onStart(),\\n            onMove: ev => this.onMove(ev),\\n            onEnd: ev => this.onEnd(ev),\\n        });\\n        this.updateState();\\n    }\\n    async componentDidLoad() {\\n        this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\\n        this.updateState();\\n    }\\n    disconnectedCallback() {\\n        this.blocker.destroy();\\n        menuController._unregister(this);\\n        if (this.animation) {\\n            this.animation.destroy();\\n        }\\n        if (this.gesture) {\\n            this.gesture.destroy();\\n            this.gesture = undefined;\\n        }\\n        this.animation = undefined;\\n        this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\\n    }\\n    onSplitPaneChanged(ev) {\\n        this.isPaneVisible = ev.detail.isPane(this.el);\\n        this.updateState();\\n    }\\n    onBackdropClick(ev) {\\n        if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\\n            const shouldClose = (ev.composedPath)\\n                ? !ev.composedPath().includes(this.menuInnerEl)\\n                : false;\\n            if (shouldClose) {\\n                ev.preventDefault();\\n                ev.stopPropagation();\\n                this.close();\\n            }\\n        }\\n    }\\n    /**\\n     * Returns `true` is the menu is open.\\n     */\\n    isOpen() {\\n        return Promise.resolve(this._isOpen);\\n    }\\n    /**\\n     * Returns `true` is the menu is active.\\n     *\\n     * A menu is active when it can be opened or closed, meaning it's enabled\\n     * and it's not part of a `ion-split-pane`.\\n     */\\n    isActive() {\\n        return Promise.resolve(this._isActive());\\n    }\\n    /**\\n     * Opens the menu. If the menu is already open or it can't be opened,\\n     * it returns `false`.\\n     */\\n    open(animated = true) {\\n        return this.setOpen(true, animated);\\n    }\\n    /**\\n     * Closes the menu. If the menu is already closed or it can't be closed,\\n     * it returns `false`.\\n     */\\n    close(animated = true) {\\n        return this.setOpen(false, animated);\\n    }\\n    /**\\n     * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\\n     * If the operation can't be completed successfully, it returns `false`.\\n     */\\n    toggle(animated = true) {\\n        return this.setOpen(!this._isOpen, animated);\\n    }\\n    /**\\n     * Opens or closes the button.\\n     * If the operation can't be completed successfully, it returns `false`.\\n     */\\n    setOpen(shouldOpen, animated = true) {\\n        return menuController._setOpen(this, shouldOpen, animated);\\n    }\\n    async _setOpen(shouldOpen, animated = true) {\\n        // If the menu is disabled or it is currently being animated, let's do nothing\\n        if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\\n            return false;\\n        }\\n        this.beforeAnimation(shouldOpen);\\n        await this.loadAnimation();\\n        await this.startAnimation(shouldOpen, animated);\\n        this.afterAnimation(shouldOpen);\\n        return true;\\n    }\\n    async loadAnimation() {\\n        // Menu swipe animation takes the menu's inner width as parameter,\\n        // If `offsetWidth` changes, we need to create a new animation.\\n        const width = this.menuInnerEl.offsetWidth;\\n        if (width === this.width && this.animation !== undefined) {\\n            return;\\n        }\\n        this.width = width;\\n        // Destroy existing animation\\n        if (this.animation) {\\n            this.animation.destroy();\\n            this.animation = undefined;\\n        }\\n        // Create new animation\\n        this.animation = await menuController._createAnimation(this.type, this);\\n        if (!config.getBoolean('animated', true)) {\\n            this.animation.duration(0);\\n        }\\n        this.animation.fill('both');\\n    }\\n    async startAnimation(shouldOpen, animated) {\\n        const isReversed = !shouldOpen;\\n        const ani = this.animation\\n            .direction((isReversed) ? 'reverse' : 'normal')\\n            .easing((isReversed) ? 'cubic-bezier(0.4, 0.0, 0.6, 1)' : 'cubic-bezier(0.0, 0.0, 0.2, 1)');\\n        if (animated) {\\n            await ani.playAsync();\\n        }\\n        else {\\n            ani.playSync();\\n        }\\n    }\\n    _isActive() {\\n        return !this.disabled && !this.isPaneVisible;\\n    }\\n    canSwipe() {\\n        return this.swipeGesture && !this.isAnimating && this._isActive();\\n    }\\n    canStart(detail) {\\n        if (!this.canSwipe()) {\\n            return false;\\n        }\\n        if (this._isOpen) {\\n            return true;\\n            // TODO error\\n        }\\n        else if (menuController._getOpenSync()) {\\n            return false;\\n        }\\n        return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\\n    }\\n    onWillStart() {\\n        this.beforeAnimation(!this._isOpen);\\n        return this.loadAnimation();\\n    }\\n    onStart() {\\n        if (!this.isAnimating || !this.animation) {\\n            assert(false, 'isAnimating has to be true');\\n            return;\\n        }\\n        // the cloned animation should not use an easing curve during seek\\n        this.animation\\n            .direction((this._isOpen) ? 'reverse' : 'normal')\\n            .progressStart(true);\\n    }\\n    onMove(detail) {\\n        if (!this.isAnimating || !this.animation) {\\n            assert(false, 'isAnimating has to be true');\\n            return;\\n        }\\n        const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\\n        const stepValue = delta / this.width;\\n        this.animation.progressStep(stepValue);\\n    }\\n    onEnd(detail) {\\n        if (!this.isAnimating || !this.animation) {\\n            assert(false, 'isAnimating has to be true');\\n            return;\\n        }\\n        const isOpen = this._isOpen;\\n        const isEndSide = this.isEndSide;\\n        const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\\n        const width = this.width;\\n        const stepValue = delta / width;\\n        const velocity = detail.velocityX;\\n        const z = width / 2.0;\\n        const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\\n        const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\\n        const shouldComplete = isOpen\\n            ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\\n            : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\\n        let shouldOpen = !isOpen && shouldComplete;\\n        if (isOpen && !shouldComplete) {\\n            shouldOpen = true;\\n        }\\n        this.lastOnEnd = detail.timeStamp;\\n        // Account for rounding errors in JS\\n        let newStepValue = (shouldComplete) ? 0.001 : -0.001;\\n        /**\\n         * TODO: stepValue can sometimes return a negative\\n         * value, but you can't have a negative time value\\n         * for the cubic bezier curve (at least with web animations)\\n         * Not sure if the negative step value is an error or not\\n         */\\n        const adjustedStepValue = (stepValue <= 0) ? 0.01 : stepValue;\\n        /**\\n         * Animation will be reversed here, so need to\\n         * reverse the easing curve as well\\n         *\\n         * Additionally, we need to account for the time relative\\n         * to the new easing curve, as `stepValue` is going to be given\\n         * in terms of a linear curve.\\n         */\\n        newStepValue += getTimeGivenProgression(new Point(0, 0), new Point(0.4, 0), new Point(0.6, 1), new Point(1, 1), adjustedStepValue);\\n        this.animation\\n            .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\\n            .onFinish(() => this.afterAnimation(shouldOpen), {\\n            oneTimeCallback: true\\n        })\\n            .progressEnd(shouldComplete, newStepValue, 300);\\n    }\\n    beforeAnimation(shouldOpen) {\\n        assert(!this.isAnimating, '_before() should not be called while animating');\\n        // this places the menu into the correct location before it animates in\\n        // this css class doesn't actually kick off any animations\\n        this.el.classList.add(SHOW_MENU);\\n        if (this.backdropEl) {\\n            this.backdropEl.classList.add(SHOW_BACKDROP);\\n        }\\n        this.blocker.block();\\n        this.isAnimating = true;\\n        if (shouldOpen) {\\n            this.ionWillOpen.emit();\\n        }\\n        else {\\n            this.ionWillClose.emit();\\n        }\\n    }\\n    afterAnimation(isOpen) {\\n        assert(this.isAnimating, '_before() should be called while animating');\\n        // keep opening/closing the menu disabled for a touch more yet\\n        // only add listeners/css if it's enabled and isOpen\\n        // and only remove listeners/css if it's not open\\n        // emit opened/closed events\\n        this._isOpen = isOpen;\\n        this.isAnimating = false;\\n        if (!this._isOpen) {\\n            this.blocker.unblock();\\n        }\\n        if (isOpen) {\\n            // add css class\\n            if (this.contentEl) {\\n                this.contentEl.classList.add(MENU_CONTENT_OPEN);\\n            }\\n            // emit open event\\n            this.ionDidOpen.emit();\\n        }\\n        else {\\n            // remove css classes\\n            this.el.classList.remove(SHOW_MENU);\\n            if (this.contentEl) {\\n                this.contentEl.classList.remove(MENU_CONTENT_OPEN);\\n            }\\n            if (this.backdropEl) {\\n                this.backdropEl.classList.remove(SHOW_BACKDROP);\\n            }\\n            if (this.animation) {\\n                this.animation.stop();\\n            }\\n            // emit close event\\n            this.ionDidClose.emit();\\n        }\\n    }\\n    updateState() {\\n        const isActive = this._isActive();\\n        if (this.gesture) {\\n            this.gesture.setDisabled(!isActive || !this.swipeGesture);\\n        }\\n        // Close menu immediately\\n        if (!isActive && this._isOpen) {\\n            // close if this menu is open, and should not be enabled\\n            this.forceClosing();\\n        }\\n        if (!this.disabled) {\\n            menuController._setActiveMenu(this);\\n        }\\n        assert(!this.isAnimating, 'can not be animating');\\n    }\\n    forceClosing() {\\n        assert(this._isOpen, 'menu cannot be closed');\\n        this.isAnimating = true;\\n        const ani = this.animation.direction('reverse');\\n        ani.playSync();\\n        this.afterAnimation(false);\\n    }\\n    render() {\\n        const { isEndSide, type, disabled, mode, isPaneVisible } = this;\\n        return (h(Host, { role: \\\"navigation\\\", class: {\\n                [mode]: true,\\n                [`menu-type-${type}`]: true,\\n                'menu-enabled': !disabled,\\n                'menu-side-end': isEndSide,\\n                'menu-side-start': !isEndSide,\\n                'menu-pane-visible': isPaneVisible\\n            } }, h(\\\"div\\\", { class: \\\"menu-inner\\\", ref: el => this.menuInnerEl = el }, h(\\\"slot\\\", null)), h(\\\"ion-backdrop\\\", { ref: el => this.backdropEl = el, class: \\\"menu-backdrop\\\", tappable: false, stopPropagation: false })));\\n    }\\n    get el() { return getElement(this); }\\n    static get watchers() { return {\\n        \\\"type\\\": [\\\"typeChanged\\\"],\\n        \\\"disabled\\\": [\\\"disabledChanged\\\"],\\n        \\\"side\\\": [\\\"sideChanged\\\"],\\n        \\\"swipeGesture\\\": [\\\"swipeGestureChanged\\\"]\\n    }; }\\n    static get style() { return \\\":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}\\\\@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\\\"; }\\n};\\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\\n    return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\\n};\\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\\n    if (isEndSide) {\\n        return posX >= win.innerWidth - maxEdgeStart;\\n    }\\n    else {\\n        return posX <= maxEdgeStart;\\n    }\\n};\\nconst SHOW_MENU = 'show-menu';\\nconst SHOW_BACKDROP = 'show-backdrop';\\nconst MENU_CONTENT_OPEN = 'menu-content-open';\\n\\n// Given a menu, return whether or not the menu toggle should be visible\\r\\nconst updateVisibility = async (menu) => {\\r\\n    const menuEl = await menuController.get(menu);\\r\\n    return !!(menuEl && await menuEl.isActive());\\r\\n};\\n\\nconst MenuButton = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n        this.visible = false;\\n        /**\\n         * If `true`, the user cannot interact with the menu button.\\n         */\\n        this.disabled = false;\\n        /**\\n         * Automatically hides the menu button when the corresponding menu is not active\\n         */\\n        this.autoHide = true;\\n        /**\\n         * The type of the button.\\n         */\\n        this.type = 'button';\\n        this.onClick = async () => {\\n            return menuController.toggle(this.menu);\\n        };\\n    }\\n    componentDidLoad() {\\n        this.visibilityChanged();\\n    }\\n    async visibilityChanged() {\\n        this.visible = await updateVisibility(this.menu);\\n    }\\n    render() {\\n        const { color, disabled } = this;\\n        const mode = getIonMode(this);\\n        const menuIcon = config.get('menuIcon', 'menu');\\n        const hidden = this.autoHide && !this.visible;\\n        const attrs = {\\n            type: this.type\\n        };\\n        return (h(Host, { onClick: this.onClick, \\\"aria-disabled\\\": disabled ? 'true' : null, \\\"aria-hidden\\\": hidden ? 'true' : null, class: Object.assign({ [mode]: true }, createColorClasses(color), { 'button': true, 'menu-button-hidden': hidden, 'menu-button-disabled': disabled, 'ion-activatable': true, 'ion-focusable': true }) }, h(\\\"button\\\", Object.assign({}, attrs, { disabled: disabled, class: \\\"button-native\\\" }), h(\\\"slot\\\", null, h(\\\"ion-icon\\\", { icon: menuIcon, mode: mode, lazy: false })), mode === 'md' && h(\\\"ion-ripple-effect\\\", { type: \\\"unbounded\\\" }))));\\n    }\\n    static get style() { return \\\":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}\\\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}\\\\@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(var(--ion-color-primary-rgb,56,128,255),0.1);--border-radius:4px;--color:var(--ion-color-primary,#3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.activated){opacity:.4}\\\\@media (any-hover:hover){:host(:hover){opacity:.6}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.1)}\\\"; }\\n};\\n\\nconst MenuController = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Open the menu. If a menu is not provided then it will open the first\\n     * menu found. If the specified menu is `start` or `end`, then it will open\\n     * the enabled menu on that side. Otherwise, it will try to find the menu\\n     * using the menu's `id` property. If a menu is not found then it will\\n     * return `false`.\\n     *\\n     * @param menu The menuId or side of the menu to open.\\n     */\\n    open(menu) {\\n        return menuController.open(menu);\\n    }\\n    /**\\n     * Close the menu. If a menu is specified, it will close that menu.\\n     * If no menu is specified, then it will close any menu that is open.\\n     * If it does not find any open menus, it will return `false`.\\n     *\\n     * @param menu The menuId or side of the menu to close.\\n     */\\n    close(menu) {\\n        return menuController.close(menu);\\n    }\\n    /**\\n     * Toggle the menu open or closed. If the menu is already open, it will try to\\n     * close the menu, otherwise it will try to open it. Returns `false` if\\n     * a menu is not found.\\n     *\\n     * @param menu The menuId or side of the menu to toggle.\\n     */\\n    toggle(menu) {\\n        return menuController.toggle(menu);\\n    }\\n    /**\\n     * Enable or disable a menu. Disabling a menu will not allow gestures\\n     * for that menu or any calls to open it. This is useful when there are\\n     * multiple menus on the same side and only one of them should be allowed\\n     * to open. Enabling a menu will automatically disable all other menus\\n     * on that side.\\n     *\\n     * @param enable If `true`, the menu should be enabled.\\n     * @param menu The menuId or side of the menu to enable or disable.\\n     */\\n    enable(enable, menu) {\\n        return menuController.enable(enable, menu);\\n    }\\n    /**\\n     * Enable or disable the ability to swipe open the menu.\\n     *\\n     * @param enable If `true`, the menu swipe gesture should be enabled.\\n     * @param menu The menuId or side of the menu to enable or disable the swipe gesture on.\\n     */\\n    swipeGesture(enable, menu) {\\n        return menuController.swipeGesture(enable, menu);\\n    }\\n    /**\\n     * Get whether or not the menu is open. Returns `true` if the specified\\n     * menu is open. If a menu is not specified, it will return `true` if\\n     * any menu is currently open.\\n     *\\n     * @param menu The menuId or side of the menu that is being checked.\\n     */\\n    isOpen(menu) {\\n        return menuController.isOpen(menu);\\n    }\\n    /**\\n     * Get whether or not the menu is enabled. Returns `true` if the\\n     * specified menu is enabled. Returns `false` if a menu is disabled\\n     * or not found.\\n     *\\n     * @param menu The menuId or side of the menu that is being checked.\\n     */\\n    isEnabled(menu) {\\n        return menuController.isEnabled(menu);\\n    }\\n    /**\\n     * Get a menu instance. If a menu is not provided then it will return the first\\n     * menu found. If the specified menu is `start` or `end`, then it will return the\\n     * enabled menu on that side. Otherwise, it will try to find the menu using the menu's\\n     * `id` property. If a menu is not found then it will return `null`.\\n     *\\n     * @param menu The menuId or side of the menu.\\n     */\\n    get(menu) {\\n        return menuController.get(menu);\\n    }\\n    /**\\n     * Get the instance of the opened menu. Returns `null` if a menu is not found.\\n     */\\n    getOpen() {\\n        return menuController.getOpen();\\n    }\\n    /**\\n     * Get all menu instances.\\n     */\\n    getMenus() {\\n        return menuController.getMenus();\\n    }\\n    /**\\n     * Get whether or not a menu is animating. Returns `true` if any\\n     * menu is currently animating.\\n     */\\n    isAnimating() {\\n        return menuController.isAnimating();\\n    }\\n    /**\\n     * Registers a new animation that can be used with any `ion-menu` by\\n     * passing the name of the animation in its `type` property.\\n     *\\n     * @param name The name of the animation to register.\\n     * @param animation The animation function to register.\\n     */\\n    async registerAnimation(name, animation) {\\n        return menuController.registerAnimation(name, animation);\\n    }\\n    static get style() { return \\\".menu-content{-webkit-transform:translateZ(0);transform:translateZ(0)}.menu-content-open{cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation;pointer-events:none}.ios .menu-content-reveal{-webkit-box-shadow:-8px 0 42px rgba(0,0,0,.08);box-shadow:-8px 0 42px rgba(0,0,0,.08)}[dir=rtl].ios .menu-content-reveal{-webkit-box-shadow:8px 0 42px rgba(0,0,0,.08);box-shadow:8px 0 42px rgba(0,0,0,.08)}.md .menu-content-push,.md .menu-content-reveal{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\\\"; }\\n};\\n\\nconst MenuToggle = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n        this.visible = false;\\n        /**\\n         * Automatically hides the content when the corresponding menu is not active.\\n         *\\n         * By default, it's `true`. Change it to `false` in order to\\n         * keep `ion-menu-toggle` always visible regardless the state of the menu.\\n         */\\n        this.autoHide = true;\\n        this.onClick = () => {\\n            return menuController.toggle(this.menu);\\n        };\\n    }\\n    connectedCallback() {\\n        this.visibilityChanged();\\n    }\\n    async visibilityChanged() {\\n        this.visible = await updateVisibility(this.menu);\\n    }\\n    render() {\\n        const mode = getIonMode(this);\\n        const hidden = this.autoHide && !this.visible;\\n        return (h(Host, { onClick: this.onClick, \\\"aria-hidden\\\": hidden ? 'true' : null, class: {\\n                [mode]: true,\\n                'menu-toggle-hidden': hidden,\\n            } }, h(\\\"slot\\\", null)));\\n    }\\n    static get style() { return \\\":host(.menu-toggle-hidden){display:none}\\\"; }\\n};\\n\\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuController as ion_menu_controller, MenuToggle as ion_menu_toggle };\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{GEuc:function(t,e,i){\"use strict\";i.r(e),i.d(e,\"ion_menu\",(function(){return l})),i.d(e,\"ion_menu_button\",(function(){return v})),i.d(e,\"ion_menu_controller\",(function(){return f})),i.d(e,\"ion_menu_toggle\",(function(){return w}));var n=i(\"MTfx\"),s=i(\"pcH8\"),o=(i(\"uSLK\"),i(\"VUZZ\")),a=i(\"8PBF\"),r=i(\"pyhm\"),h=i(\"9Xoc\"),d=i(\"3QqI\");const l=class{constructor(t){Object(n.l)(this,t),this.lastOnEnd=0,this.blocker=o.GESTURE_CONTROLLER.createBlocker({disableScroll:!0}),this.mode=Object(n.e)(this),this.isAnimating=!1,this._isOpen=!1,this.isPaneVisible=!1,this.isEndSide=!1,this.disabled=!1,this.side=\"start\",this.swipeGesture=!0,this.maxEdgeStart=50,this.ionWillOpen=Object(n.d)(this,\"ionWillOpen\",7),this.ionWillClose=Object(n.d)(this,\"ionWillClose\",7),this.ionDidOpen=Object(n.d)(this,\"ionDidOpen\",7),this.ionDidClose=Object(n.d)(this,\"ionDidClose\",7),this.ionMenuChange=Object(n.d)(this,\"ionMenuChange\",7)}typeChanged(t,e){const i=this.contentEl;i&&(void 0!==e&&i.classList.remove(`menu-content-${e}`),i.classList.add(`menu-content-${t}`),i.removeAttribute(\"style\")),this.menuInnerEl&&this.menuInnerEl.removeAttribute(\"style\"),this.animation=void 0}disabledChanged(){this.updateState(),this.ionMenuChange.emit({disabled:this.disabled,open:this._isOpen})}sideChanged(){this.isEndSide=Object(h.h)(this.side)}swipeGestureChanged(){this.updateState()}async connectedCallback(){void 0===this.type&&(this.type=s.b.get(\"menuType\",\"ios\"===this.mode?\"reveal\":\"overlay\"));const t=this.el.parentNode,e=void 0!==this.contentId?document.getElementById(this.contentId):t&&t.querySelector&&t.querySelector(\"[main]\");e&&e.tagName?(this.contentEl=e,e.classList.add(\"menu-content\"),this.typeChanged(this.type,void 0),this.sideChanged(),a.a._register(this),this.gesture=(await Promise.resolve().then(i.bind(null,\"VUZZ\"))).createGesture({el:document,gestureName:\"menu-swipe\",gesturePriority:30,threshold:10,canStart:t=>this.canStart(t),onWillStart:()=>this.onWillStart(),onStart:()=>this.onStart(),onMove:t=>this.onMove(t),onEnd:t=>this.onEnd(t)}),this.updateState()):console.error('Menu: must have a \"content\" element to listen for drag events on.')}async componentDidLoad(){this.ionMenuChange.emit({disabled:this.disabled,open:this._isOpen}),this.updateState()}disconnectedCallback(){this.blocker.destroy(),a.a._unregister(this),this.animation&&this.animation.destroy(),this.gesture&&(this.gesture.destroy(),this.gesture=void 0),this.animation=void 0,this.contentEl=this.backdropEl=this.menuInnerEl=void 0}onSplitPaneChanged(t){this.isPaneVisible=t.detail.isPane(this.el),this.updateState()}onBackdropClick(t){this._isOpen&&this.lastOnEnd<t.timeStamp-100&&t.composedPath&&!t.composedPath().includes(this.menuInnerEl)&&(t.preventDefault(),t.stopPropagation(),this.close())}isOpen(){return Promise.resolve(this._isOpen)}isActive(){return Promise.resolve(this._isActive())}open(t=!0){return this.setOpen(!0,t)}close(t=!0){return this.setOpen(!1,t)}toggle(t=!0){return this.setOpen(!this._isOpen,t)}setOpen(t,e=!0){return a.a._setOpen(this,t,e)}async _setOpen(t,e=!0){return!(!this._isActive()||this.isAnimating||t===this._isOpen||(this.beforeAnimation(t),await this.loadAnimation(),await this.startAnimation(t,e),this.afterAnimation(t),0))}async loadAnimation(){const t=this.menuInnerEl.offsetWidth;t===this.width&&void 0!==this.animation||(this.width=t,this.animation&&(this.animation.destroy(),this.animation=void 0),this.animation=await a.a._createAnimation(this.type,this),s.b.getBoolean(\"animated\",!0)||this.animation.duration(0),this.animation.fill(\"both\"))}async startAnimation(t,e){const i=!t,n=this.animation.direction(i?\"reverse\":\"normal\").easing(i?\"cubic-bezier(0.4, 0.0, 0.6, 1)\":\"cubic-bezier(0.0, 0.0, 0.2, 1)\");e?await n.playAsync():n.playSync()}_isActive(){return!this.disabled&&!this.isPaneVisible}canSwipe(){return this.swipeGesture&&!this.isAnimating&&this._isActive()}canStart(t){return!!this.canSwipe()&&(!!this._isOpen||!a.a._getOpenSync()&&u(window,t.currentX,this.isEndSide,this.maxEdgeStart))}onWillStart(){return this.beforeAnimation(!this._isOpen),this.loadAnimation()}onStart(){this.isAnimating&&this.animation?this.animation.direction(this._isOpen?\"reverse\":\"normal\").progressStart(!0):Object(h.b)(!1,\"isAnimating has to be true\")}onMove(t){if(!this.isAnimating||!this.animation)return void Object(h.b)(!1,\"isAnimating has to be true\");const e=c(t.deltaX,this._isOpen,this.isEndSide);this.animation.progressStep(e/this.width)}onEnd(t){if(!this.isAnimating||!this.animation)return void Object(h.b)(!1,\"isAnimating has to be true\");const e=this._isOpen,i=this.isEndSide,n=c(t.deltaX,e,i),s=this.width,o=n/s,a=t.velocityX,r=s/2,l=a>=0&&(a>.2||t.deltaX>r),u=a<=0&&(a<-.2||t.deltaX<-r),p=e?i?l:u:i?u:l;let m=!e&&p;e&&!p&&(m=!0),this.lastOnEnd=t.timeStamp;let b=p?.001:-.001;const g=o<=0?.01:o;b+=Object(d.b)(new d.a(0,0),new d.a(.4,0),new d.a(.6,1),new d.a(1,1),g),this.animation.easing(\"cubic-bezier(0.4, 0.0, 0.6, 1)\").onFinish(()=>this.afterAnimation(m),{oneTimeCallback:!0}).progressEnd(p,b,300)}beforeAnimation(t){Object(h.b)(!this.isAnimating,\"_before() should not be called while animating\"),this.el.classList.add(p),this.backdropEl&&this.backdropEl.classList.add(m),this.blocker.block(),this.isAnimating=!0,t?this.ionWillOpen.emit():this.ionWillClose.emit()}afterAnimation(t){Object(h.b)(this.isAnimating,\"_before() should be called while animating\"),this._isOpen=t,this.isAnimating=!1,this._isOpen||this.blocker.unblock(),t?(this.contentEl&&this.contentEl.classList.add(b),this.ionDidOpen.emit()):(this.el.classList.remove(p),this.contentEl&&this.contentEl.classList.remove(b),this.backdropEl&&this.backdropEl.classList.remove(m),this.animation&&this.animation.stop(),this.ionDidClose.emit())}updateState(){const t=this._isActive();this.gesture&&this.gesture.setDisabled(!t||!this.swipeGesture),!t&&this._isOpen&&this.forceClosing(),this.disabled||a.a._setActiveMenu(this),Object(h.b)(!this.isAnimating,\"can not be animating\")}forceClosing(){Object(h.b)(this._isOpen,\"menu cannot be closed\"),this.isAnimating=!0,this.animation.direction(\"reverse\").playSync(),this.afterAnimation(!1)}render(){const{isEndSide:t,type:e,disabled:i,mode:s,isPaneVisible:o}=this;return Object(n.i)(n.a,{role:\"navigation\",class:{[s]:!0,[`menu-type-${e}`]:!0,\"menu-enabled\":!i,\"menu-side-end\":t,\"menu-side-start\":!t,\"menu-pane-visible\":o}},Object(n.i)(\"div\",{class:\"menu-inner\",ref:t=>this.menuInnerEl=t},Object(n.i)(\"slot\",null)),Object(n.i)(\"ion-backdrop\",{ref:t=>this.backdropEl=t,class:\"menu-backdrop\",tappable:!1,stopPropagation:!1}))}get el(){return Object(n.f)(this)}static get watchers(){return{type:[\"typeChanged\"],disabled:[\"disabledChanged\"],side:[\"sideChanged\"],swipeGesture:[\"swipeGestureChanged\"]}}static get style(){return\":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color,#fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,0,0);transform:translate3d(-9999px,0,0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}:host-context([dir=rtl]) .menu-inner,[dir=rtl] .menu-inner{left:unset;right:unset;left:auto;right:0;-webkit-transform:translate3d(calc(-1 * -9999px),0,0);transform:translate3d(calc(-1 * -9999px),0,0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto}ion-backdrop{display:none;opacity:.01;z-index:-1}@media (max-width:340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translateZ(0);transform:translateZ(0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none!important;transform:none!important;-webkit-box-shadow:none!important;box-shadow:none!important}:host(.menu-pane-visible) ion-backdrop{display:hidden!important}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\"}},c=(t,e,i)=>Math.max(0,e!==i?-t:t),u=(t,e,i,n)=>i?e>=t.innerWidth-n:e<=n,p=\"show-menu\",m=\"show-backdrop\",b=\"menu-content-open\",g=async t=>{const e=await a.a.get(t);return!(!e||!(await e.isActive()))},v=class{constructor(t){Object(n.l)(this,t),this.visible=!1,this.disabled=!1,this.autoHide=!0,this.type=\"button\",this.onClick=async()=>a.a.toggle(this.menu)}componentDidLoad(){this.visibilityChanged()}async visibilityChanged(){this.visible=await g(this.menu)}render(){const{color:t,disabled:e}=this,i=Object(n.e)(this),o=s.b.get(\"menuIcon\",\"menu\"),a=this.autoHide&&!this.visible,h={type:this.type};return Object(n.i)(n.a,{onClick:this.onClick,\"aria-disabled\":e?\"true\":null,\"aria-hidden\":a?\"true\":null,class:Object.assign({[i]:!0},Object(r.a)(t),{button:!0,\"menu-button-hidden\":a,\"menu-button-disabled\":e,\"ion-activatable\":!0,\"ion-focusable\":!0})},Object(n.i)(\"button\",Object.assign({},h,{disabled:e,class:\"button-native\"}),Object(n.i)(\"slot\",null,Object(n.i)(\"ion-icon\",{icon:o,mode:i,lazy:!1})),\"md\"===i&&Object(n.i)(\"ion-ripple-effect\",{type:\"unbounded\"})))}static get style(){return\":host{--background:transparent;--color-focused:var(--color);--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:.5;pointer-events:none}@media (any-hover:hover){:host(:hover) .button-native{background:var(--background-hover);color:var(--color-hover)}}:host(.ion-focused) .button-native{background:var(--background-focused);color:var(--color-focused)}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host-context(ion-toolbar:not(.ion-color)){color:var(--ion-toolbar-color,var(--color))}:host{--background-focused:rgba(var(--ion-color-primary-rgb,56,128,255),0.1);--border-radius:4px;--color:var(--ion-color-primary,#3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.activated){opacity:.4}@media (any-hover:hover){:host(:hover){opacity:.6}}:host(.ion-color.ion-focused) .button-native{background:rgba(var(--ion-color-base-rgb),.1)}\"}},f=class{constructor(t){Object(n.l)(this,t)}open(t){return a.a.open(t)}close(t){return a.a.close(t)}toggle(t){return a.a.toggle(t)}enable(t,e){return a.a.enable(t,e)}swipeGesture(t,e){return a.a.swipeGesture(t,e)}isOpen(t){return a.a.isOpen(t)}isEnabled(t){return a.a.isEnabled(t)}get(t){return a.a.get(t)}getOpen(){return a.a.getOpen()}getMenus(){return a.a.getMenus()}isAnimating(){return a.a.isAnimating()}async registerAnimation(t,e){return a.a.registerAnimation(t,e)}static get style(){return\".menu-content{-webkit-transform:translateZ(0);transform:translateZ(0)}.menu-content-open{cursor:pointer;-ms-touch-action:manipulation;touch-action:manipulation;pointer-events:none}.ios .menu-content-reveal{-webkit-box-shadow:-8px 0 42px rgba(0,0,0,.08);box-shadow:-8px 0 42px rgba(0,0,0,.08)}[dir=rtl].ios .menu-content-reveal{-webkit-box-shadow:8px 0 42px rgba(0,0,0,.08);box-shadow:8px 0 42px rgba(0,0,0,.08)}.md .menu-content-push,.md .menu-content-reveal{-webkit-box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18);box-shadow:0 2px 22px 0 rgba(0,0,0,.09),4px 0 16px 0 rgba(0,0,0,.18)}\"}},w=class{constructor(t){Object(n.l)(this,t),this.visible=!1,this.autoHide=!0,this.onClick=()=>a.a.toggle(this.menu)}connectedCallback(){this.visibilityChanged()}async visibilityChanged(){this.visible=await g(this.menu)}render(){const t=Object(n.e)(this),e=this.autoHide&&!this.visible;return Object(n.i)(n.a,{onClick:this.onClick,\"aria-hidden\":e?\"true\":null,class:{[t]:!0,\"menu-toggle-hidden\":e}},Object(n.i)(\"slot\",null))}static get style(){return\":host(.menu-toggle-hidden){display:none}\"}}}}]);","extractedComments":[]}