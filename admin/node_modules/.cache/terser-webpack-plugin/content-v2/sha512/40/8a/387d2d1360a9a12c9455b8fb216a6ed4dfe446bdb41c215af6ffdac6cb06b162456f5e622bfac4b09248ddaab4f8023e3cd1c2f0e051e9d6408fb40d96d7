{"map":"{\"version\":3,\"sources\":[\"/home/angeloacr/Proyectos/Tuk/ionic-taxi-4/admin/node_modules/@ionic/core/dist/esm/ion-action-sheet-controller_8.entry.js.pre-build-optimizer.js\"],\"names\":[\"__webpack_require__\",\"r\",\"__webpack_exports__\",\"d\",\"ActionSheetController\",\"AlertController\",\"Anchor\",\"LoadingController\",\"ModalController\",\"PickerController\",\"PopoverController\",\"ToastController\",\"_core_c02a05e9_js__WEBPACK_IMPORTED_MODULE_0__\",\"_overlays_518a98a4_js__WEBPACK_IMPORTED_MODULE_2__\",\"_theme_353a032e_js__WEBPACK_IMPORTED_MODULE_3__\",\"[object Object]\",\"hostRef\",\"Object\",\"this\",\"options\",\"data\",\"role\",\"id\",\"document\",\"routerDirection\",\"onClick\",\"ev\",\"href\",\"console\",\"warn\",\"mode\",\"attrs\",\"rel\",\"class\",\"assign\",\"color\",\"ion-activatable\",\"style\"],\"mappings\":\"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\",\"sourcesContent\":[\"import { r as registerInstance, d as getIonMode, h, H as Host } from './core-c02a05e9.js';\\nimport './config-503c2549.js';\\nimport { h as createOverlay, j as dismissOverlay, k as getOverlay } from './overlays-518a98a4.js';\\nimport { o as openURL, c as createColorClasses } from './theme-353a032e.js';\\n\\nconst ActionSheetController = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create an action sheet overlay with action sheet options.\\n     *\\n     * @param options The options to use to create the action sheet.\\n     */\\n    create(options) {\\n        return createOverlay('ion-action-sheet', options);\\n    }\\n    /**\\n     * Dismiss the open action sheet overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the action sheet.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the action sheet.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\\n     */\\n    dismiss(data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-action-sheet', id);\\n    }\\n    /**\\n     * Get the most recently opened action sheet overlay.\\n     */\\n    async getTop() {\\n        return getOverlay(document, 'ion-action-sheet');\\n    }\\n};\\n\\nconst AlertController = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create an alert overlay with alert options.\\n     *\\n     * @param options The options to use to create the alert.\\n     */\\n    create(options) {\\n        return createOverlay('ion-alert', options);\\n    }\\n    /**\\n     * Dismiss the open alert overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the alert.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the alert.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\\n     */\\n    dismiss(data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-alert', id);\\n    }\\n    /**\\n     * Get the most recently opened alert overlay.\\n     */\\n    async getTop() {\\n        return getOverlay(document, 'ion-alert');\\n    }\\n};\\n\\nconst Anchor = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n        /**\\n         * When using a router, it specifies the transition direction when navigating to\\n         * another page using `href`.\\n         */\\n        this.routerDirection = 'forward';\\n        this.onClick = (ev) => {\\n            openURL(this.href, ev, this.routerDirection);\\n        };\\n    }\\n    componentDidLoad() {\\n        console.warn('[DEPRECATED][ion-anchor] The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.');\\n    }\\n    render() {\\n        const mode = getIonMode(this);\\n        const attrs = {\\n            href: this.href,\\n            rel: this.rel\\n        };\\n        return (h(Host, { onClick: this.onClick, class: Object.assign({}, createColorClasses(this.color), { [mode]: true, 'ion-activatable': true }) }, h(\\\"a\\\", Object.assign({}, attrs), h(\\\"slot\\\", null))));\\n    }\\n    static get style() { return \\\":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\\\"; }\\n};\\n\\nconst LoadingController = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a loading overlay with loading options.\\n     *\\n     * @param options The options to use to create the loading.\\n     */\\n    create(options) {\\n        return createOverlay('ion-loading', options);\\n    }\\n    /**\\n     * Dismiss the open loading overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the loading.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the loading.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\\n     */\\n    dismiss(data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-loading', id);\\n    }\\n    /**\\n     * Get the most recently opened loading overlay.\\n     */\\n    async getTop() {\\n        return getOverlay(document, 'ion-loading');\\n    }\\n};\\n\\nconst ModalController = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a modal overlay with modal options.\\n     *\\n     * @param options The options to use to create the modal.\\n     */\\n    create(options) {\\n        return createOverlay('ion-modal', options);\\n    }\\n    /**\\n     * Dismiss the open modal overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the modal.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the modal.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\\n     */\\n    dismiss(data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-modal', id);\\n    }\\n    /**\\n     * Get the most recently opened modal overlay.\\n     */\\n    async getTop() {\\n        return getOverlay(document, 'ion-modal');\\n    }\\n};\\n\\nconst PickerController = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a picker overlay with picker options.\\n     *\\n     * @param options The options to use to create the picker.\\n     */\\n    create(options) {\\n        return createOverlay('ion-picker', options);\\n    }\\n    /**\\n     * Dismiss the open picker overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the picker.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the picker.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\\n     */\\n    dismiss(data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-picker', id);\\n    }\\n    /**\\n     * Get the most recently opened picker overlay.\\n     */\\n    async getTop() {\\n        return getOverlay(document, 'ion-picker');\\n    }\\n};\\n\\nconst PopoverController = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a popover overlay with popover options.\\n     *\\n     * @param options The options to use to create the popover.\\n     */\\n    create(options) {\\n        return createOverlay('ion-popover', options);\\n    }\\n    /**\\n     * Dismiss the open popover overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the popover.\\n     * This can be useful in a button handler for determining which button was\\n     * clicked to dismiss the popover.\\n     * Some examples include: ``\\\"cancel\\\"`, `\\\"destructive\\\"`, \\\"selected\\\"`, and `\\\"backdrop\\\"`.\\n     * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\\n     */\\n    dismiss(data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-popover', id);\\n    }\\n    /**\\n     * Get the most recently opened popover overlay.\\n     */\\n    async getTop() {\\n        return getOverlay(document, 'ion-popover');\\n    }\\n};\\n\\nconst ToastController = class {\\n    constructor(hostRef) {\\n        registerInstance(this, hostRef);\\n    }\\n    /**\\n     * Create a toast overlay with toast options.\\n     *\\n     * @param options The options to use to create the toast.\\n     */\\n    create(options) {\\n        return createOverlay('ion-toast', options);\\n    }\\n    /**\\n     * Dismiss the open toast overlay.\\n     *\\n     * @param data Any data to emit in the dismiss events.\\n     * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\\n     * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\\n     */\\n    dismiss(data, role, id) {\\n        return dismissOverlay(document, data, role, 'ion-toast', id);\\n    }\\n    /**\\n     * Get the most recently opened toast overlay.\\n     */\\n    async getTop() {\\n        return getOverlay(document, 'ion-toast');\\n    }\\n};\\n\\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, Anchor as ion_anchor, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{\"0BR9\":function(t,e,n){\"use strict\";n.r(e),n.d(e,\"ion_action_sheet_controller\",(function(){return i})),n.d(e,\"ion_alert_controller\",(function(){return s})),n.d(e,\"ion_anchor\",(function(){return a})),n.d(e,\"ion_loading_controller\",(function(){return l})),n.d(e,\"ion_modal_controller\",(function(){return u})),n.d(e,\"ion_picker_controller\",(function(){return d})),n.d(e,\"ion_popover_controller\",(function(){return h})),n.d(e,\"ion_toast_controller\",(function(){return b}));var o=n(\"MTfx\"),r=(n(\"pcH8\"),n(\"9GLg\")),c=n(\"pyhm\");const i=class{constructor(t){Object(o.l)(this,t)}create(t){return Object(r.i)(\"ion-action-sheet\",t)}dismiss(t,e,n){return Object(r.k)(document,t,e,\"ion-action-sheet\",n)}async getTop(){return Object(r.l)(document,\"ion-action-sheet\")}},s=class{constructor(t){Object(o.l)(this,t)}create(t){return Object(r.i)(\"ion-alert\",t)}dismiss(t,e,n){return Object(r.k)(document,t,e,\"ion-alert\",n)}async getTop(){return Object(r.l)(document,\"ion-alert\")}},a=class{constructor(t){Object(o.l)(this,t),this.routerDirection=\"forward\",this.onClick=t=>{Object(c.d)(this.href,t,this.routerDirection)}}componentDidLoad(){console.warn(\"[DEPRECATED][ion-anchor] The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.\")}render(){const t=Object(o.e)(this),e={href:this.href,rel:this.rel};return Object(o.i)(o.a,{onClick:this.onClick,class:Object.assign({},Object(c.a)(this.color),{[t]:!0,\"ion-activatable\":!0})},Object(o.i)(\"a\",Object.assign({},e),Object(o.i)(\"slot\",null)))}static get style(){return\":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\"}},l=class{constructor(t){Object(o.l)(this,t)}create(t){return Object(r.i)(\"ion-loading\",t)}dismiss(t,e,n){return Object(r.k)(document,t,e,\"ion-loading\",n)}async getTop(){return Object(r.l)(document,\"ion-loading\")}},u=class{constructor(t){Object(o.l)(this,t)}create(t){return Object(r.i)(\"ion-modal\",t)}dismiss(t,e,n){return Object(r.k)(document,t,e,\"ion-modal\",n)}async getTop(){return Object(r.l)(document,\"ion-modal\")}},d=class{constructor(t){Object(o.l)(this,t)}create(t){return Object(r.i)(\"ion-picker\",t)}dismiss(t,e,n){return Object(r.k)(document,t,e,\"ion-picker\",n)}async getTop(){return Object(r.l)(document,\"ion-picker\")}},h=class{constructor(t){Object(o.l)(this,t)}create(t){return Object(r.i)(\"ion-popover\",t)}dismiss(t,e,n){return Object(r.k)(document,t,e,\"ion-popover\",n)}async getTop(){return Object(r.l)(document,\"ion-popover\")}},b=class{constructor(t){Object(o.l)(this,t)}create(t){return Object(r.i)(\"ion-toast\",t)}dismiss(t,e,n){return Object(r.k)(document,t,e,\"ion-toast\",n)}async getTop(){return Object(r.l)(document,\"ion-toast\")}}}}]);","extractedComments":[]}